# onLogin: acquire openid and sessionid and then put them in storage
- route: /auth/on_login
- method: POST
- request data:
    - code string
- response data:
    - openid string
    - sid string
- response status:
    - 200 success
    - 500 failure

# afterLogin: callback of onLogin; get userInfo through wx api
- route: /auth/after_login
- method: PUT
- request params:
    - openid string
    - sid string
- request data:
    - avatar string
    - gender int
    - nickname string
- response status:
    - 200 success
    - 201 success new user
    - 401 auth check fails
    - 500 failure

-----------------------------------------
# Get one group
- route: /group/:groupID
- method: GET
- request params:
    - openid string
    - sid string
- respnose data:
    - group Group
- response status:
    - 200 success
    - 401 auth check fails
    - 500 failure

# Get group by userID
- route: /group/user
- method: GET
- request params:
    - openid stirng
    - sid string
    - user_id string
- response data
  - group []Group
- response status:
    - 200 success
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Create group
- route: /group
- method: PUT
- request params:
    - openid string
    - sid string
- request data:
    - name string
    - user_ids []string
- response data:
    - id int
- response status:
    - 201 success
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Update group
- route: /group/:groupID
- method: POST
- request params:
    - openid string
    - sid string
- request data:
    - id int
    - name string
- response status:
    - 200 success
    - 201 success group changed
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Delete group
- route: /group/:groupID
- method: DELETE
- request params:
    - openid string
    - sid string
- request data:
    - id int
- response status:
    - 200 success
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

-----------------------------------------
# Get one task
- route: /task/:taskID/short
- method: GET
- request params:
    - openid string
    - sid string
- response data:
    - task:
        - name string
        - people []User
        - type int
        - status int
- response status:
    - 200 success
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Get one task
- route: /task/:taskID
- method: GET
  - request params:
      - openid string
      - sid string
  - response data:
      - task Task # computed field `done`
  - response status:
      - 200 success
      - 401 auth check fails
      - 403 not allowed
      - 500 failure

# Get tasks by groupID
- route: /task/group
- method: GET
- request params:
    - openid string
    - sid string
    - group_id int
- response data:
    - task []Task # computed field `done`
- response status:
    - 200 success
    - 401 auth check fails
    - 403 not allowed
    - 500 failure


# Create task
- route: /task
- method: PUT
- request params:
    - openid string
    - sid string
- request data:
    - group_id int
    - user_ids []string
    - name string
    - type int
    - leader_id # tbd
    - start_date Date: # easier to use then built-in date type; or timestamp I guess
        - year int
        - month int
        - day int
    - end_date Date
    - description string
- response data:
    - task Task
- response status:
    - 200 success
    - 201 success created
    - 400 wrong request format
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Update a task; only update meta value; contents update would be implemented in next sprint
- route: /task/:taskID/meta
- method: POST
- request params:
    - openid string
    - sid string
- request data:
    - name string
    - start_date Date
    - end_date Date
    - readonly bool
    - description string
    - done bool
- response status:
    - 200 success
    - 201 success updated
    - 400 wrong request format
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

# Delete task
- route: /tasks/:taskID
- method: DELETE
- request params:
    - openid string
    - sid string
- response status:
    - 200 success
    - 201 success deleted
    - 401 auth check fails
    - 403 not allowed
    - 500 failure

